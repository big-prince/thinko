<!DOCTYPE html>
<html lang="en">
<head>
    <title>Thinko</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../public/styles.css">
    <script src="https://kit.fontawesome.com/6dcb090a5e.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha384-KyZXEAg3QhqLMpG8r+Lj5ghO5U5bC4C4vKf5b5b5Vv5b5b5Vv5b5b5Vv5b5b5Vv5b5b5" crossorigin="anonymous">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Dosis:wght@200;300;400;500;600;700;800&family=Fjalla+One&family=Fjord+One&family=Montserrat:wght@100;200&family=Mooli&family=Philosopher:ital,wght@0,400;0,700;1,400;1,700&family=Playfair+Display:wght@700&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Dosis:wght@200;300;400;500;600;700;800&family=Fjalla+One&family=Fjord+One&family=Montserrat:wght@100;200&family=Mooli&family=Philosopher:ital,wght@0,400;0,700;1,400;1,700&family=Playfair+Display:wght@700&family=Young+Serif&display=swap');

        /* Custom styles for the header */
        header {
            background-color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            border-bottom: 1px solid #ddd; /* Add a subtle border at the bottom */
            z-index: 1000;
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .header-title {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 2.3rem;
            font-weight: bold;
            margin-right: 20px;
        }

        .user-info {
            font-size: 1.2rem;
        }

        .user-name {
            font-weight: bold;
        }

        .update-profile-button {
            background: linear-gradient(160deg, #42abfb, #05518b);
            color: white;
            border: none;
            border-radius: 5px;
            padding: 8px 16px;
            font-size: 1rem;
            cursor: pointer;
            transition: background 0.3s;
        }

        .update-profile-button:hover {
            background: linear-gradient(160deg, #42abfb, #05518b);
        }
        /* Custom styles for the main content */
        .content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            margin: 20px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        }

        .section-header {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 1.5rem;
            font-weight: bold;
            margin-top: 0;
        }

        /* Facebook-style search bar */
        .search-bar {
            background-color: #f0f2f5;
            border: 1px solid #ddd;
            border-radius: 20px;
            padding: 8px 16px;
            display: flex;
            align-items: center;
        }

        .search-input {
            border: none;
            background: none;
            outline: none;
            flex-grow: 1;
            font-size: 1rem;
        }

        .search-icon {
            margin-right: 8px;
            color: #777;
        }

        .quiz-card {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            margin: 0 0 20px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s ease-in-out;
        }

        .quiz-card:hover {
            transform: scale(1.05);
        }

        .quiz-card h2 {
            font-size: 1.5rem;
            margin: 0;
            color: #333;
        }

        .quiz-card p {
            color: #777;
        }

        button {
            font-family: 'Mooli', sans-serif ;
        }
        .start-quiz-button {
            background: linear-gradient(160deg, #42abfb, #05518b);
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            transition: background 0.3s, transform 0.2s ease-in-out;
        }

        .delete-quiz-button {
            background-color: rgb(234, 14, 14);
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            transition: background 0.3s, transform 0.2s ease-in-out;
        }

        .share-quiz-button {
            background-color: rgb(121, 159, 231);
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            transition: background 0.3s, transform 0.2s ease-in-out;
        }

        .start-quiz-button:hover {
            background: linear-gradient(160deg, #42abfb, #05518b);
            transform: scale(1.1);
        }
        /* ... Rest of the styling remains the same ... */
        

        .new-quiz-button {
            /* background: linear-gradient(135deg, #05175b, #f8cd22); */
            background-color: #05518b;
            color: white;
            border: none;
            border-radius: 10px;
            font-family: monospace;
            padding: 10px 20px;
            font-size: 2.5rem;
            cursor: pointer;
            transition: background 0.3s;
            text-align: center;
            margin-left: 35rem;
        }

        .new-quiz-button:hover {
            background: linear-gradient(180deg, #42abfb, #05518b);
        }

        /* Line animation around the content */
        .line-animation {
            position: absolute;
            top: -20px;
            left: -20px;
            right: -20px;
            bottom: -20px;
            background-image: linear-gradient(0deg, transparent 0%, transparent 10%, rgba(0, 0, 0, 0.1) 10%, rgba(0, 0, 0, 0.1) 20%, transparent 20%, transparent 30%, rgba(0, 0, 0, 0.1) 30%, rgba(0, 0, 0, 0.1) 40%, transparent 40%, transparent 50%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.1) 60%, transparent 60%, transparent 70%, rgba(0, 0, 0, 0.1) 70%, rgba(0, 0, 0, 0.1) 80%, transparent 80%, transparent 90%, rgba(0, 0, 0, 0.1) 90%);
            background-size: 100% 20px, 20px 100%;
            animation: move 3s linear infinite;
        }

        @keyframes move {
            0% {
                background-position: 0 0, 0 0;
            }
            100% {
                background-position: 100% 0, 0 100%;
            }
        }

    /* Styles for the backdrop blur */
 .backdrop {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(5px);
      z-index: 9998;
      display: none;
    }

    /* Styles for the popup */
    .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 1.5rem;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      z-index: 9999;
      display: none;
    }

    .popup h2 {
      margin-top: 0;
    }

    .popup input[type="password"] {
      margin: 10px 0;
      padding: 8px;
    }

    .popup button {
        background: linear-gradient(160deg, #42abfb, #05518b);
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            transition: background 0.3s;
    }

    .options {
        display:flex;
        margin-bottom: 1rem;
    }
    
    /* Style for the selected radio button */
    .quiz-radio:checked + .quiz-label {
            color: rgb(200, 17, 91); /* Change the color to green when selected */
            font-size: 20px;
        }
    


    /* responsive styling */
    @media (max-width: 768px) {
        header {
    background-color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 15px 20px;
    border-bottom: 1px solid #ddd;
    z-index: 1000;
}

.header-left {
    margin-bottom: 10px;
}

.header-title {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 1.8rem;
    font-weight: bold;
    margin: 0;
}

.user-info {
    font-size: 1.2rem;
    text-align: center;
}

.user-name {
    font-weight: bold;
}

.update-profile-button {
    background: linear-gradient(160deg, #42abfb, #05518b);
    color: white;
    border: none;
    border-radius: 5px;
    padding: 8px 16px;
    font-size: 1rem;
    cursor: pointer;
    transition: background 0.3s;
    margin-top: 10px;
}

/* Custom styles for the main content */
.content {
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    margin: 20px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
}

.section-header {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 1.5rem;
    font-weight: bold;
    margin-top: 0;
}

/* Facebook-style search bar */
.search-bar {
    background-color: #f0f2f5;
    border: 1px solid #ddd;
    border-radius: 20px;
    padding: 8px 16px;
    display: flex;
    align-items: center;
    margin-bottom: 20px;
}

.search-input {
    border: none;
    background: none;
    outline: none;
    flex-grow: 1;
    font-size: 1rem;
}

.search-icon {
    margin-right: 8px;
    color: #777;
}

/* Quiz card */
.quiz-card {
    background-color: #fff;
    border-radius: 10px;
    padding: 20px;
    margin: 0 0 20px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
    transition: transform 0.2s ease-in-out;
}

.quiz-card:hover {
    transform: scale(1.05);
}

.quiz-card h3 {
    font-size: 1.3rem;
    margin: 0;
    color: #333;
}

.quiz-card p {
    color: #777;
}

/* Start Quiz Button */
.start-quiz-button {
    background: linear-gradient(160deg, #42abfb, #05518b);
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    transition: background 0.3s, transform 0.2s ease-in-out;
    font-size: 1rem;
    margin-top: 10px;
}

/* New Quiz Button */
.new-quiz-button {
    background-color: #05518b;
    color: white;
    border: none;
    border-radius: 10px;
    font-family: monospace;
    padding: 10px 20px;
    font-size: 1.8rem;
    cursor: pointer;
    transition: background 0.3s;
    text-align: center;
    margin: 20px;
}

.new-quiz-button:hover {
    background: linear-gradient(180deg, #42abfb, #05518b);
}

/* Line animation */
.line-animation {
    display: none; /* Hide the line animation on mobile */
}

/* Backdrop and Popup */
.backdrop {
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    z-index: 9998;
    display: none;
}

.popup {
    background: white;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 1.5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 9999;
    display: none;
}

/* Responsive styles for the quiz card */
@media (max-width: 768px) {
    .quiz-card {
        padding: 10px;
    }

    .quiz-card h3 {
        font-size: 1.2rem;
    }

    .start-quiz-button {
        padding: 8px 16px;
        font-size: 0.9rem;
    }
}

    }
    /* Responsive styles for the header */
@media (max-width: 768px) {
    .header-title {
        font-size: 1.5rem;
    }

    .user-info {
        font-size: 1rem;
    }

    .update-profile-button {
        padding: 6px 12px;
        font-size: 0.9rem;
    }
}

/* Responsive styles for the search bar */
@media (max-width: 768px) {
    .search-bar {
        padding: 6px 12px;
    }

    .search-input {
        font-size: 0.9rem;
    }

    .search-icon {
        margin-right: 4px;
    }
}
/* Responsive styles for the inner quiz part */
@media (max-width: 768px) {
    .quiz-container {
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        margin: 0;
    }

    .quiz-name {
        font-size: 1.2rem;
    }

    .totalQuestions {
        font-size: 0.9rem;
    }

    .quiz h3 {
        font-size: 1rem;
    }

    .quiz-options {
        margin-top: 10px;
    }

    .options {
        margin-bottom: 10px;
    }

    .quiz-radio:checked + .quiz-label {
        font-size: 1rem;
    }

    #nextQuestionButton {
        padding: 8px 16px;
        font-size: 0.9rem;
        margin-top: 10px;
    }

    .score-container {
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        margin: 0;
    }

    .actual-score {
        margin-top: 10px;
    }

    .actual-score h3 {
        font-size: 1.2rem;
        margin: 0;
    }

    .actual-score h3 span {
        font-size: 1rem;
    }

    .endButton {
        padding: 8px 16px;
        font-size: 0.9rem;
        margin-top: 10px;
    }

    .nq-container {
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        margin: 0;
    }

    .nq-container h1 {
        font-size: 1.2rem;
    }

    .quiz-section {
        margin-top: 10px;
    }

    .quizname label,
    .quizdescription label,
    .quiznumber label {
        font-size: 0.9rem;
    }

    .quizname input,
    .quizdescription input,
    .quiznumber input {
        font-size: 0.9rem;
        padding: 8px;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    #next-question,
    #question-next {
        padding: 8px 16px;
        font-size: 0.9rem;
        margin-top: 10px;
    }

    .created-alert h2 {
        font-size: 1rem;
    }
}
    </style>
</head>
<body style="font-family: 'Young Serif', sans-serif;font-weight: 100;">
    <header>
        <div class="header-left">
            <div class="user-info">
                <span class="user-name">Welcome: <%=name%>(<span style="font-size: 15px;;">@<%=username%></span>)</span><br>
                <a href="/logout"><button class="update-profile-button" style="margin-top: 1rem;" >Logout</button> </a>
            </div>
        </div>
        <a href="/home" style="text-decoration: none; color: inherit;"><h1 class="header-title">Thinko</h1></a> 
        <div class="search-bar">
            <!-- change font awesome icon to button -->
            <button class="search-icon" style="border-style: none;cursor: pointer;"><i class="fas fa-search search-icon"></i></button>
            <input type="text" class="search-input" placeholder="Search Any Quiz Name...">
        </div>
    </header>
    <div class="content">
        <h2 class="section-header">Current Quizzes</h2>
        <!-- Refined quiz section -->
        <ul class="quiz-list">
            <% quizzes.forEach((quiz, index) => { %>
                <li style="text-decoration: none; list-style: none; margin-left: -2.5rem;">
                    <div class="quiz-card" style="background-color: rgba(45, 133, 215, 0.411)">
                        <h3>Quiz: <span id="main-quiz-name-<%= index %>"><%= quiz.name %></span></h3>
                        <p>Description: <%= quiz.description %></p>
                        <button class="start-quiz-button" id="start-quiz-button-<%= index %>">Start Quiz</button>
                        <!--Share quiz Button-->
                        <!-- <button class="share-quiz-button" id="share-quiz-button-<%= index %>">Share Quiz</button> -->
                        <!-- //delete quiz button -->
                        <button class="delete-quiz-button" id="delete-quiz-button-<%= index %>">Delete Quiz</button>
                    </div>
                </li>
            <% }) %>
        </ul>
        

        <div class="backdrop" id="backdrop"></div>
        <div class="popup" id="quizPopup">
            <div class="existingPin">
                <div class="quiz-container">
                  <h1 style="text-align: center;" class="quiz-name">Quiz: <span id="backend-quizName"></span></h1>
                  <h3 style="text-align: center; align-items: center;" class="totalQuestions">Total Questions: <span class="allQuestions"></span></h3>
                <div class="quiz">
                    <h3 >Question:<span id="backend-question"></span>?</h3>
                    <div class="quiz-options">
                          <div class="options">
                              <input type="radio" class="quiz-radio" id="option1" name="quizOption" value="Option 1">
                              <label class="quiz-label" for="option1" id="option1"><span id="backend-o1"></span> </label>
                          </div>
  
                          <div class="options">
                              <input type="radio" class="quiz-radio" id="option2" name="quizOption" value="Option 2">
                              <label class="quiz-label" for="option2" id="option2"><span id="backend-o2"></span></label> 
                          </div>
  
                          <div class="options">
                              <input type="radio" class="quiz-radio" id="option3" name="quizOption" value="Option 3">
                              <label class="quiz-label" for="option3" id="option3"><span id="backend-o3"></span></label>
                          </div>

                          <div class="options">
                              <input type="radio" class="quiz-radio" id="option3" name="quizOption" value="Option 3">
                              <label class="quiz-label" for="option4" id="option3"><span id="backend-o4"></span><label>
                          </div>
                      
                    </div>
                </div>
                    <button id="nextQuestionButton">Submit</button>
                    <button id="submitButton" style="display: none;">Submit</button>
              </div>


            </div>

              <!-- create the scores -->
            <div class="score-container" style="display: none; padding-right: 3rem; padding-left: 3rem;" >
                <h2 style="text-align: center; align-items: center;">SCORE</h2>
                <div class="actual-score">
                    <h3 style="text-align: center; align-items: center; font-size: 7rem; margin-top: 0.5rem; margin-bottom: 0.5rem;"><span class="score"></span>/<span class="totalQNo"></span></h3>
                </div>
                <button type="button" class="endButton" style="text-align: center; align-items: center;">End Quiz</button>
            </div>
          


            <!-- create new quiz -->
            <div class="nq-container" style="display: none;">
                <h1>Create new Quiz</h1>
                <div class="quiz-section">
                    <div class="quizname">
                        <label for="quiz-name">Enter Quiz name: </label>
                        <input type="text" placeholder="Quiz Name" id="new-quiz-name" style="border-radius: 10px; margin-bottom: 2rem;">
                    </div>
                    <div class="quizdescription">
                        <label for="quiz-description">Enter Description: </label>
                        <input type="text" placeholder="Quiz Description" id="new-quiz-description" style="border-radius: 10px; margin-bottom: 2rem;">
                    </div>
                    <div class="quiznumber">
                        <label for="quiz-name">Enter No of Questions: </label>
                        <input type="number" placeholder="Question No." id="question-number" style="border-radius: 10px; margin-bottom: 2rem;">
                    </div>

                </div>

                <div class="question-section">
                    <div class="question-one" style="display: none;">
                        <div class="question-name">
                            <label for="question"> Enter Question <span id="current-number"></span></label>
                            <input type="text" placeholder="Question Name" id="question1-name" style="border-radius: 10px; margin-bottom: 2rem;">
                        </div>
                        <div class="options1"> 
                            <div class="option1">
                                <label for="option1"> Enter Option </label>
                                <input type="text" name="option1" id="nq-option1" style="border-radius: 10px; margin-bottom: 2rem;">
                            </div>
                            <div class="option2">
                                <label for="option1"> Enter Option </label>
                                <input type="text" name="option2" id="nq-option2" style="border-radius: 10px; margin-bottom: 2rem;">
                            </div>
                            <div class="option3">
                                <label for="option1"> Enter Option </label>
                                <input type="text" name="option3" id="nq-option3" style="border-radius: 10px; margin-bottom: 2rem;">
                            </div>
                            <div class="option4">
                                <label for="option1"> Enter Option </label>
                                <input type="text" name="option4" id="nq-option4" style="border-radius: 10px; margin-bottom: 2rem;">
                            </div>
                            <div class="answer">
                                <label for="answer">Enter Answer</label>
                                <input type="text" placeholder="answer" id="new-quiz-answer" style="border-radius: 10px; margin-bottom: 2rem;">
                            </div>
                        </div>
                        <button id="next-question">Next Question</button>
                    </div>
                </div>
                <button type="button" id="question-next">Next</button>
                <!-- alert to show that quiz is created -->
                <div class="created-alert">
                    <h2>Success, Quiz Created.</h2>
                    <h2>Reload.</h2>
                </div>
            </div>
          
    </div>

</div>


<button class="new-quiz-button">New Quiz</button> <!-- New quiz button in the footer -->

    <script>
        const quizBtn = document.querySelector('.start-quiz-button');
        const backdrop = document.getElementById('backdrop');
        const quizPopup = document.getElementById('quizPopup');
        const questionNext = document.getElementById('question-next');
        const questionFormat = document.querySelector('.question-one')
        const questionNumber = document.getElementById('question-number')
        const nextQuestionBtn = document.getElementById('next-question');
        const totalNO = parseInt(questionNumber.value);


        //quiz list
        const quizList = document.querySelector('.quiz-list');
        //new quiz name
        const newQuizName = document.getElementById('new-quiz-name');
        const newQuizDescription = document.getElementById('new-quiz-description')
        //array to display question
        let displayArray = []


        //requireents for new quiz
        const newQuestionName = document.getElementById('question1-name')
        const NQoption1 = document.getElementById('nq-option1')
        const NQption2 = document.getElementById('nq-option2')
        const NQoption3 = document.getElementById('nq-option3')
        const NQoption4 = document.getElementById('nq-option4')
        const quizAnswer = document.getElementById('new-quiz-answer')
        let index = 0
        //questions and options


        backdrop.addEventListener('click', () => {
        backdrop.style.display = 'none';
         quizPopup.style.display = 'none';
        });


        //select all
        document.querySelectorAll(".start-quiz-button").forEach((button, index) => {
            
            // Construct the unique ID for the associated quiz name
            const mainQuizName = document.getElementById(`main-quiz-name-${index}`);
            
            //quiz button to show popup
            button.addEventListener('click', async(e)=>{
                e.preventDefault();
    
                //show popup
                backdrop.style.display = 'block';
                quizPopup.style.display = 'block';
    
                //send request to backend to get questions and options
                const url = '/quiz'
    
                //send frontend fetch request
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    },
                    credentials:"include",
                    body: JSON.stringify({
                        quizName: mainQuizName.textContent,
                        index: index
                    })
                })
                const data = await response.json()
    
                //check what data reads
                console.log(data.question)
                //put the question into the element
                const spanID = document.getElementById('backend-question');
                //update the questions
                spanID.textContent = data.question
    
                //update the options and quizName
                const quizName = document.getElementById('backend-quizName')
                const spanOptions = {
                    option1: document.getElementById('backend-o1'),
                    option2: document.getElementById('backend-o2'),
                    option3: document.getElementById('backend-o3'),
                    option4: document.getElementById('backend-o4'),
                }
                //enter values
                quizName.textContent = data.quizName
                spanOptions.option1.textContent = data.options.option1
                spanOptions.option2.textContent = data.options.option2
                spanOptions.option3.textContent = data.options.option3
                spanOptions.option4.textContent = data.options.option4
                //enter the total number of questions
                const totalQ = document.querySelector('.allQuestions')
                totalQ.textContent = data.questionLength
            })
           
        });
        //custom function
        

        //for all delete buttons
        document.querySelectorAll(".delete-quiz-button").forEach((button, index) => {
            
            // Construct the unique ID for the associated quiz name
            const mainQuizName = document.getElementById(`main-quiz-name-${index}`);
            
            //quiz button to show popup
            button.addEventListener('click', async(e)=>{
                e.preventDefault();
    
                //send request to backend to get questions and options
                const url = '/delete'
    
                //send frontend fetch request
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    },
                    credentials:"include",
                    body: JSON.stringify({
                        quizName: mainQuizName.textContent,
                        index: index
                    })
                })
                const data = await response.json()
                console.log(data.message)
                location.reload()
            })
           
        });


        //next button to move quizzes
        // Get references to HTML elements
        const questionElement = document.getElementById("question");
        const nextQButton = document.getElementById("nextQuestionButton");
        const quizOptions = document.querySelectorAll(".quiz-radio");
        const submitButton = document.getElementById('submitButton');
        const endButton = document.querySelector('.endButton');
        const quizName = document.querySelector('.quiz-name');
        const quizSection = document.querySelector('.quiz-section')
        const newQuizButton = document.querySelector('.new-quiz-button')
        //current number
        const currentNumber = document.getElementById('current-number');


        

        var questions = {}
       

        var success = []

        let currentQuestionIndex = 0;

        //next button and moving to new Quiz
        nextQButton.addEventListener('click', async(e)=>{
            e.preventDefault()

            //
            const selectedOption = document.querySelector('input[name="quizOption"]:checked');
            if(!selectedOption){
                console.log('Nothing Chosen')
            }
            const label = document.querySelector(`label[for="${selectedOption.id}"]`);
            //send request to backend to get questions and options
            const url = '/answer'
            //send frontend fetch request
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials:"include",
                body: JSON.stringify({
                    answer: label.textContent,
                    index: index
                })
            })
            const data = await response.json()
        
            //
            //end quiz
            let scoreT = data.success
            let totalQ = data.totalQNo
            if(data.message == "Quiz Ended" && success && totalQ){
                console.log('Quiz Ended')
                //show score
                const scoreContainer = document.querySelector('.score-container')
                const scoreBoard = document.querySelector('.scoreboard')
                //hide next button
                let nextQuestionButton = document.getElementById('nextQuestionButton')
                nextQuestionButton.style.display = 'none'
                //put quiz section display to none
                const quizSection = document.querySelector('.quiz')
                quizSection.style.display = 'none'
                scoreContainer.style.display = 'block'
                //hide quiz section
                quizSection.style.display = 'none'
                //show submit button
                // submitButton.style.display = 'block'

                // change scoreboard values according to backend
                const totalQNo = document.querySelector('.totalQNo')
                const scoreT = document.querySelector('.score')
                console.log(data.success)
                scoreT.textContent = data.success
                totalQNo.textContent = data.totalQNo

                //update the quizNAme 
                const quizName = document.querySelector('.quiz-name')
                quizName.textContent = data.quizName

                //shutdown total number of questions display
                const totalQ = document.querySelector('.allQuestions');
                const allQ = document.querySelector('.totalQuestions')
                allQ.style.display = 'none'
                totalQ.style.display = 'none'

            }

            
            

            //put the question into the element
            const spanID = document.getElementById('backend-question');
                //update the questions
                spanID.textContent = data.message.question
    
                //update the options and quizName
                const quizName = document.getElementById('backend-quizName')
                const spanOptions = {
                    option1: document.getElementById('backend-o1'),
                    option2: document.getElementById('backend-o2'),
                    option3: document.getElementById('backend-o3'),
                    option4: document.getElementById('backend-o4'),
                }
                //enter values
                quizName.textContent = data.message.quizName
                spanOptions.option1.textContent = data.message.options.option1
                spanOptions.option2.textContent = data.message.options.option2
                spanOptions.option3.textContent = data.message.options.option3
                spanOptions.option4.textContent = data.message.options.option4
                
                success.push(data.success)
                console.log(data.message.success)
        })

        //sending the search input content to the backend
        const searchInput = document.querySelector('.search-input')
        const searchIcon = document.querySelector('.search-icon')
        //send search content to backend on click
        searchIcon.addEventListener('click', async(e)=>{
            e.preventDefault()
            console.log(searchInput.value)

            //send request to backend to get questions and options
            const url = '/search'

            //send frontend fetch request
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials:"include",
                body: JSON.stringify({
                    search: searchInput.value
                })
            })
            const data = await response.json()
            console.log(data.message)
            //update the quiz list
            quizList.innerHTML = ''
            data.message.forEach((quiz, index) => {
                quizList.innerHTML += `
                <li style="text-decoration: none; list-style: none; margin-left: -2.5rem;">
                    <div class="quiz-card" style="background-color: rgba(215, 45, 150, 0.3);">
                        <h3>Quiz: <span id="main-quiz-name-${index}">${quiz.name}</span></h3>
                        <p>Description: ${quiz.description}</p>
                        <button class="start-quiz-button" id="start-quiz-button-${index}">Start Quiz</button>
                    </div>
                </li>
            `
            })

            //make the search result buttons work
            document.querySelectorAll(".start-quiz-button").forEach((button, index) => {
            
                // Construct the unique ID for the associated quiz name
                const mainQuizName = document.getElementById(`main-quiz-name-${index}`);
                
                //quiz button to show popup
                button.addEventListener('click', async(e)=>{
                    e.preventDefault();
        
                    //show popup
                    backdrop.style.display = 'block';
                    quizPopup.style.display = 'block';
        
                    //send request to backend to get questions and options
                    const url = '/quiz'
        
                    //send frontend fetch request
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        credentials:"include",
                        body: JSON.stringify({
                            quizName: mainQuizName.textContent,
                            index: index
                        })
                    })
                    const data = await response.json()
        
                    //check what data reads
                    console.log(data.question)
                    //put the question into the element
                    const spanID = document.getElementById('backend-question');
                    //update the questions
                    spanID.textContent = data.question
        
                    //update the options and quizName
                    const quizName = document.getElementById('backend-quizName')
                    const spanOptions = {
                        option1: document.getElementById('backend-o1'),
                        option2: document.getElementById('backend-o2'),
                        option3: document.getElementById('backend-o3'),
                        option4: document.getElementById('backend-o4'),
                    }
                    //enter values
                    quizName.textContent = data.quizName
                    spanOptions.option1.textContent = data.options.option1
                    spanOptions.option2.textContent = data.options.option2
                    spanOptions.option3.textContent = data.options.option3
                    spanOptions.option4.textContent = data.options.option4
                    //enter the total number of questions
                    const totalQ = document.querySelector('.allQuestions')
                    totalQ.textContent = data.questionLength
                })
               
            });
            
           

        })

        //end quiz button
        endButton.addEventListener('click', (e)=>{
            e.preventDefault()

            //close popup
            backdrop.style.display = 'none';
            quizPopup.style.display = 'none';
            location.reload()
        })


        //new quiz button
        // const quiz_container = document.querySelector('.quiz-container');
        const newCard = document.querySelector('.nq-container');


        newQuizButton.addEventListener('click', async(e)=>{
            e.preventDefault();
            console.log('Working...')

            const quiz_container = document.querySelector('.quiz-container');

           // show popup
            quiz_container.style.display = 'none';
            backdrop.style.display = 'block';
            quizPopup.style.display = 'block';

            newCard.style.display='block'
             //show the alert that for quiz created
             const createdAlert = document.querySelector('.created-alert')
                createdAlert.style.display = 'none'
        })
        
        //send to backend function
        async function NewQuizBackend() {
            
            const url = '/newquiz'

            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials:"include",
                body: JSON.stringify({
                    quizName: newQuizName.value,
                    quizDescription: newQuizDescription.value
                })
            })
        }
        questionNext.addEventListener('click', async (e)=>{
            e.preventDefault()

            //set the question table on
            //show popup
            // quiz_container.style.display = 'none';
            backdrop.style.display = 'block';
            quizPopup.style.display = 'block';
            quizSection.style.display = 'none'
            questionFormat.style.display = 'block'

            //send the question Value to the backend
            displayArray.push(1)
            console.log(displayArray.length)

            //update question number
            currentNumber.textContent = displayArray.length
            
            //send to back
            console.log(newQuizDescription.value)
            await NewQuizBackend()


            questionNext.style.display = 'none'
             //show the alert that for quiz created
             const createdAlert = document.querySelector('.created-alert')
                createdAlert.style.display = 'none'

        })
        
        //send to backend function
      

        nextQuestionBtn.addEventListener('click', async (e)=>{
            e.preventDefault()

            const totalNO = parseInt(questionNumber.value)

            //update questio number
            currentNumber.textContent = displayArray.length + 1
            
            //send form to the backend
            const url = '/questions'

            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials:"include",
                body: JSON.stringify({
                    questionName: newQuestionName.value,
                    option1: NQoption1.value,
                    option2: NQption2.value,
                    option3: NQoption3.value,
                    option4: NQoption4.value,
                    answer: quizAnswer.value
                })
            })
            const data = await response.json()
            if(data.message == 'Questions Saved'){
                newQuestionName.value = ''
                NQoption1.value = ''
                NQption2.value = ''
                NQoption3.value = ''
                NQoption4.value = ''
                quizAnswer.value = ''



                displayArray.push(1);
            }
            console.log(displayArray, totalNO)
            //for when number of questions exhausted
            if(displayArray.length > totalNO){
                questionFormat.style.display = 'none'
                //show the alert that for quiz created
                const createdAlert = document.querySelector('.created-alert')
                createdAlert.style.display = 'block'
            }


            
        })


        
    </script>
</body>
<!-- <div class="line-animation"></div> -->
</html>
